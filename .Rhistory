summary(aviation_data_clean)
# Distribution of accidents by airline and aircraft type
airline_accidents <- aviation_data_clean %>%
group_by(Air.Carrier) %>%
summarise(Total.Accidents = n(),
Total.Fatal.Injuries = sum(Total.Fatal.Injuries),
Total.Serious.Injuries = sum(Total.Serious.Injuries))
aircraft_accidents <- aviation_data_clean %>%
group_by(Make) %>%
summarise(Total.Accidents = n(),
Total.Fatal.Injuries = sum(Total.Fatal.Injuries),
Total.Serious.Injuries = sum(Total.Serious.Injuries))
color=c("red", "green", "blue")
# Plotting
ggplot(airline_accidents, aes(x = reorder(Air.Carrier, Total.Accidents), y = Total.Accidents)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Total Accidents by Airline", x = "Airline", y = "Total Accidents")
# Create an edge list for the network graph
edge_list <- aviation_data_clean %>%
group_by(Air.Carrier, Make) %>%
summarise(Accident.Count = n()) %>%
filter(Accident.Count > 5)  # Filter to reduce clutter
# Create a graph object
g <- graph_from_data_frame(d = edge_list, directed = FALSE)
# Plot the network graph
plot(g, vertex.size=10, vertex.label.cex=0.8, edge.width=edge_list$Accident.Count, main="Airline and Aircraft Type Network Graph")
# Plot the network graph with colored nodes
plot(g,
vertex.size = 10,
vertex.label.cex = 0.8,
edge.width = edge_list$Accident.Count,
vertex.color = node_colors,  # Specify the node colors
main = "Airline and Aircraft Type Network Graph"
)
# Create an edge list for the network graph
edge_list <- aviation_data_clean %>%
group_by(Air.Carrier, Make) %>%
summarise(Accident.Count = n()) %>%
filter(Accident.Count > 5)  # Filter to reduce clutter
# Step 1: Define Node Types (Airline vs Aircraft Type)
airlines <- unique(edge_list$Air.Carrier)
aircraft_types <- unique(edge_list$Make)
# Step 2: Assign Colors
# Let's assign blue color to airlines and green color to aircraft types
node_colors <- ifelse(vertex_attr(g)$name %in% airlines, "blue", "green")
# Plot the network graph with colored nodes
plot(g,
vertex.size = 10,
vertex.label.cex = 0.8,
edge.width = edge_list$Accident.Count,
vertex.color = node_colors,  # Specify the node colors
main = "Airline and Aircraft Type Network Graph"
)
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Calculate the percentage of accidents
accident_counts <- accident_counts %>% mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(accident_counts, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Airline", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
aviation_data$Air.Carrier <- gsub("world airways.*", "world airways", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
other_count <- sum(other_airlines$Accidents)
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names (example: this may need more specific cases based on the data)
aviation_data$Air.Carrier <- gsub("yute air.*", "yute air", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("wright air.*", "wright air", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("world airways.*", "world airways", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top N airlines and group the rest as 'Other'
N <- 10
top_airlines <- accident_counts %>% top_n(N, wt = Accidents)
other_airlines <- accident_counts %>% filter(!Air.Carrier %in% top_airlines$Air.Carrier)
other_count <- sum(other_airlines$Accidents)
# Create a new dataframe for plotting
plot_data <- top_airlines %>%
mutate(Air.Carrier = as.character(Air.Carrier)) %>%
bind_rows(data.frame(Air.Carrier = "Other", Accidents = other_count)) %>%
mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(plot_data, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Airline", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
aviation_data$Air.Carrier <- gsub("world airways.*", "world airways", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
top_airlines_list <- top_airlines$Air.Carrier
# Label airlines not in the top 10 as 'Other'
aviation_data <- aviation_data %>%
mutate(Air.Carrier = ifelse(Air.Carrier %in% top_airlines_list, Air.Carrier, "Other"))
# Recalculate the number of accidents per airline including 'Other'
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Calculate the percentage of accidents
accident_counts <- accident_counts %>% mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(accident_counts, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Airline", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names (example: this may need more specific cases based on the data)
aviation_data$Air.Carrier <- gsub("yute air.*", "yute air", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("wright air.*", "wright air", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("world airways.*", "world airways", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Calculate the percentage of accidents
top_10_airlines <- top_10_airlines %>% mutate(Percentage = (Accidents / sum(top_10_airlines$Accidents)) * 100)
# Plot the pie chart
ggplot(top_10_airlines, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Top 10 Airlines", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names
# Add more patterns if necessary to clean the airline names effectively
aviation_data$Air.Carrier <- gsub("american airlines.*", "american airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("continental airlines.*", "continental airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("delta air lines.*", "delta air lines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("southwest airlines.*", "southwest airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("united airlines.*", "united airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("usair.*", "usair", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Calculate the percentage of accidents
top_10_airlines <- top_10_airlines %>% mutate(Percentage = (Accidents / sum(top_10_airlines$Accidents)) * 100)
# Plot the pie chart
ggplot(top_10_airlines, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Top 10 Airlines", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names if needed (add patterns if necessary)
aviation_data$Air.Carrier <- gsub("american airlines.*", "american airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("continental airlines.*", "continental airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("delta air lines.*", "delta air lines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("southwest airlines.*", "southwest airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("united airlines.*", "united airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("usair.*", "usair", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Calculate the percentage of accidents
top_10_airlines <- top_10_airlines %>% mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(top_10_airlines, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Top 10 Airlines", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names if needed (add patterns if necessary)
aviation_data$Air.Carrier <- gsub("american airlines.*", "american airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("continental airlines.*", "continental airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("delta air lines.*", "delta air lines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("southwest airlines.*", "southwest airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("united airlines.*", "united airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("usair.*", "usair", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Filter the dataset to include only the top 10 airlines
aviation_data_top_10 <- aviation_data %>% filter(Air.Carrier %in% top_10_airlines$Air.Carrier)
# Recalculate the number of accidents for the filtered dataset
accident_counts_top_10 <- aviation_data_top_10 %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Calculate the percentage of accidents
accident_counts_top_10 <- accident_counts_top_10 %>% mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(accident_counts_top_10, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Top 10 Airlines", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
head.matrix(aviation_data, n=1)
col(1,x=FALSE)
col(1,as.factor = FALSE)
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names if needed (add patterns if necessary)
aviation_data$Air.Carrier <- gsub("american airlines.*", "american airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("continental airlines.*", "continental airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("delta air lines.*", "delta air lines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("southwest airlines.*", "southwest airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("united airlines.*", "united airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("usair.*", "usair", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Calculate the percentage of accidents
top_10_airlines <-top_10_airlines %>% mutate(Percentage = (Accidents / sum(Accidents)) * 100)
# Plot the pie chart
ggplot(top_10_airlines, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Percentage of Accidents by Top 10 Airlines", x = "", y = "") +
theme_void() +
theme(legend.title = element_blank())
# Normalize and clean airline names
aviation_data$Air.Carrier <- tolower(trimws(aviation_data$Air.Carrier))
# Filter out rows with NA in Air.Carrier
aviation_data <- aviation_data %>% filter(!is.na(Air.Carrier))
# Combine similar airline names if needed (add patterns if necessary)
aviation_data$Air.Carrier <- gsub("american airlines.*", "american airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("continental airlines.*", "continental airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("delta air lines.*", "delta air lines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("southwest airlines.*", "southwest airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("united airlines.*", "united airlines", aviation_data$Air.Carrier)
aviation_data$Air.Carrier <- gsub("usair.*", "usair", aviation_data$Air.Carrier)
# Count the number of accidents per airline
accident_counts <- aviation_data %>% group_by(Air.Carrier) %>% summarise(Accidents = n())
# Get the top 10 airlines by number of accidents
top_10_airlines <- accident_counts %>% top_n(10, wt = Accidents)
# Calculate the percentage of accidents for each airline
total_accidents <- sum(top_10_airlines$Accidents)
top_10_airlines <- top_10_airlines %>% mutate(Percentage = (Accidents / total_accidents) * 100)
# Plot the data in a pie chart
ggplot(top_10_airlines, aes(x = "", y = Percentage, fill = Air.Carrier)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
labs(title = "Percentage of Accidents by Airline",
fill = "Airline")
top_10_airlines
# Plot the pie chart
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y") +
theme_void() +
labs(title = "Top 10 Airlines by Number of Accidents")
library(ggplot2)
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Plot the pie chart
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y") +
theme_void() +
labs(title = "Top 10 Airlines by Number of Accidents")
library(ggplot2)
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Calculate the percentage
df$percentage <- round(df$accidents / sum(df$accidents) * 100, 1)
# Create labels for the pie chart
df$label <- paste(df$airlines, df$percentage, "%")
# Plot the pie chart with percentage labels
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y") +
theme_void() +
geom_text(aes(label = label), position = position_stack(vjust = 0.5)) +
labs(title = "Top 10 Airlines by Number of Accidents")
library(ggplot2)
library(ggrepel)
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Calculate the percentage
df$percentage <- round(df$accidents / sum(df$accidents) * 100, 1)
# Create labels for the pie chart
df$label <- paste(df$airlines, df$percentage, "%")
# Plot the pie chart with percentage labels using geom_text_repel to avoid overlapping
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y") +
theme_void() +
geom_text_repel(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Top 10 Airlines by Number of Accidents") +
theme(legend.position = "right")
library(ggplot2)
library(ggrepel)
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Calculate the percentage
df$percentage <- round(df$accidents / sum(df$accidents) * 100, 1)
# Create labels for the pie chart
df$label <- paste(df$airlines, df$percentage, "%")
# Plot the pie chart with percentage labels using geom_text_repel to avoid overlapping and adding borders
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y") +
theme_void() +
geom_text_repel(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Top 10 Airlines by Number of Accidents") +
theme(legend.position = "right")
view(aviation_data_clean)
view(aviation_data_clean)
library(readr)
aviation_data <- read_csv("AviationData (1).csv")
View(aviation_data)
# Load necessary libraries
library(tidyverse)
library(igraph)
library(ggplot2)
library(caret)
# Clean the dataset
aviation_data_clean <- aviation_data %>%
select(Event.Id, Investigation.Type, Accident.Number, Event.Date, Location, Country,
Make, Model, Air.Carrier, Total.Fatal.Injuries, Total.Serious.Injuries,
Total.Minor.Injuries, Total.Uninjured, Aircraft.Damage, Broad.Phase.of.Flight,
Weather.Condition) %>%
filter(!is.na(Make) & !is.na(Air.Carrier) & !is.na(Total.Fatal.Injuries))
# Convert relevant columns to appropriate data types
aviation_data_clean$Event.Date <- as.Date(aviation_data_clean$Event.Date, format="%d-%b-%y")
aviation_data_clean$Total.Fatal.Injuries <- as.numeric(aviation_data_clean$Total.Fatal.Injuries)
aviation_data_clean$Total.Serious.Injuries <- as.numeric(aviation_data_clean$Total.Serious.Injuries)
aviation_data_clean$Total.Minor.Injuries <- as.numeric(aviation_data_clean$Total.Minor.Injuries)
aviation_data_clean$Total.Uninjured <- as.numeric(aviation_data_clean$Total.Uninjured)
# Handle missing values
aviation_data_clean <- aviation_data_clean %>%
mutate(Total.Fatal.Injuries = ifelse(is.na(Total.Fatal.Injuries), 0, Total.Fatal.Injuries),
Total.Serious.Injuries = ifelse(is.na(Total.Serious.Injuries), 0, Total.Serious.Injuries),
Total.Minor.Injuries = ifelse(is.na(Total.Minor.Injuries), 0, Total.Minor.Injuries),
Total.Uninjured = ifelse(is.na(Total.Uninjured), 0, Total.Uninjured))
# Create an edge list for the network graph
edge_list <- aviation_data_clean %>%
group_by(Air.Carrier, Make) %>%
summarise(Accident.Count = n()) %>%
filter(Accident.Count > 5)  # Filter to reduce clutter
# Step 1: Define Node Types (Airline vs Aircraft Type)
airlines <- unique(edge_list$Air.Carrier)
aircraft_types <- unique(edge_list$Make)
# Step 2: Assign Colors
# Let's assign blue color to airlines and green color to aircraft types
node_colors <- ifelse(vertex_attr(g)$name %in% airlines, "blue", "green")
# Plot the network graph with colored nodes
plot(g,
vertex.size = 10,
vertex.label.cex = 0.8,
edge.width = edge_list$Accident.Count,
vertex.color = node_colors,  # Specify the node colors
main = "Airline and Aircraft Type Network Graph"
)
# Install and load the required packages
if (!require('ggplot2')) {
install.packages('ggplot2')
}
if (!require('ggrepel')) {
install.packages('ggrepel')
}
library(ggplot2)
library(ggrepel)
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Calculate the percentage
df$percentage <- round(df$accidents / sum(df$accidents) * 100, 1)
# Create labels for the pie chart
df$label <- paste(df$airlines, df$percentage, "%")
# Plot the pie chart with percentage labels using geom_text_repel to avoid overlapping and adding borders
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y") +
theme_void() +
geom_text_repel(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Top 10 Airlines by Number of Accidents") +
theme(legend.position = "right")
view(aviation_data)
view(aviation_data_clean)
download.file(aviation_data_clean)
download.file(aviation_data_clean,destfile = "cleaned")
view(aviation_data_clean)
View(cluster_data_scaled)
library(readr)
aviation_data <- read_csv("AviationData (1).csv")
View(aviation_data)
# Clean the dataset
aviation_data_clean <- aviation_data %>%
select(Event.Id, Investigation.Type, Accident.Number, Event.Date, Location, Country,
Make, Model, Air.Carrier, Total.Fatal.Injuries, Total.Serious.Injuries,
Total.Minor.Injuries, Total.Uninjured, Aircraft.Damage, Broad.Phase.of.Flight,
Weather.Condition) %>%
filter(!is.na(Make) & !is.na(Air.Carrier) & !is.na(Total.Fatal.Injuries))
# Convert relevant columns to appropriate data types
aviation_data_clean$Event.Date <- as.Date(aviation_data_clean$Event.Date, format="%d-%b-%y")
aviation_data_clean$Total.Fatal.Injuries <- as.numeric(aviation_data_clean$Total.Fatal.Injuries)
aviation_data_clean$Total.Serious.Injuries <- as.numeric(aviation_data_clean$Total.Serious.Injuries)
aviation_data_clean$Total.Minor.Injuries <- as.numeric(aviation_data_clean$Total.Minor.Injuries)
aviation_data_clean$Total.Uninjured <- as.numeric(aviation_data_clean$Total.Uninjured)
# Handle missing values
aviation_data_clean <- aviation_data_clean %>%
mutate(Total.Fatal.Injuries = ifelse(is.na(Total.Fatal.Injuries), 0, Total.Fatal.Injuries),
Total.Serious.Injuries = ifelse(is.na(Total.Serious.Injuries), 0, Total.Serious.Injuries),
Total.Minor.Injuries = ifelse(is.na(Total.Minor.Injuries), 0, Total.Minor.Injuries),
Total.Uninjured = ifelse(is.na(Total.Uninjured), 0, Total.Uninjured))
# Create an edge list for the network graph
edge_list <- aviation_data_clean %>%
group_by(Air.Carrier, Make) %>%
summarise(Accident.Count = n()) %>%
filter(Accident.Count > 5)  # Filter to reduce clutter
# Step 1: Define Node Types (Airline vs Aircraft Type)
airlines <- unique(edge_list$Air.Carrier)
# Step 2: Assign Colors
# Let's assign blue color to airlines and green color to aiviewrcraft types
node_colors <- ifelse(vertex_attr(g)$name %in% airlines, "blue", "green")
# Plot the network graph with colored nodes
plot(g,
vertex.size = 10,
vertex.label.cex = 0.8,
edge.width = edge_list$Accident.Count,
vertex.color = node_colors,  # Specify the node colors
main = "Airline and Aircraft Type Network Graph"
)
# Install and load the required packages
if (!require('ggplot2')) {
install.packages('ggplot2')
}
if (!require('ggrepel')) {
install.packages('ggrepel')
}
# Define the data
airlines <- c("UNITED AIRLINES", "AMERICAN AIRLINES", "SOUTHWEST AIRLINES CO",
"DELTA AIR LINES INC", "Delta Air Lines", "CONTINENTAL AIRLINES",
"USAIR", "American Airlines", "AMERICAN AIRLINES, INC.",
"CONTINENTAL AIRLINES, INC.")
accidents <- c(49, 41, 31, 28, 27, 25, 24, 23, 22, 19)
# Create a data frame
df <- data.frame(airlines, accidents)
# Calculate the percentage
df$percentage <- round(df$accidents / sum(df$accidents) * 100, 1)
# Create labels for the pie chart
df$label <- paste(df$airlines, df$percentage, "%")
# Plot the pie chart with percentage labels using geom_text_repel to avoid overlapping and adding borders
ggplot(df, aes(x = "", y = accidents, fill = airlines)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y") +
theme_void() +
geom_text_repel(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Top 10 Airlines by Number of Accidents") +
theme(legend.position = "right")
airlines
aircraft_types
